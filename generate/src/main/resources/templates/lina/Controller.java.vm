package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end

import ${package.Entity}.dto.${entity}Dto;
import ${package.Entity}.param.${entity}Param;
import ${package.Entity}.vo.${entity}Vo;
import ${package.Service}.${entity}Service;
import com.rice.wx.common.BaseController;

import javax.servlet.http.HttpServletResponse;
import java.util.List;

/**
 * @ $!{table.comment} 前端控制器
 * @ author ${author}
 * @ date ${date}
 **/
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(tags = "【微信公众号】-$!{table.comment}")
#if(${superControllerClass})
public class ${table.controllerName} extends BaseController {
#else
public class ${table.controllerName} extends BaseController<${table.serviceName},${entity},${entity}Dto> {
#end
#set($serviceName = "$entity.substring(0,1).toLowerCase()$entity.substring(1,$entity.length())Service")

    private static final String MODULE_NAME = "$!{table.comment}";

    @Autowired
    private ${entity}Service ${table.name}Service;


    @ApiOperation(value = "新增或修改", notes = "必传参数：TODO")
    @ApiImplicitParam(name = "dto", value = "参数列表", required = true, paramType = "body", dataType = "${entity}Dto")
    public HttpApi<Boolean> saveOrUpdate(@RequestBody ${entity}Dto dto) {
            return HttpApi.ok(${table.name}Service.saveOrUpdate(dto, null));
    }

    @ApiOperation(value = "根据id删除", notes = "必传参数：id")
    @ApiImplicitParam(name = "id", value = "参数列表", required = true)
    public HttpApi<Boolean> delete(@RequestParam("id") Long id) {
        return HttpApi.ok(${table.name}Service.delete(id));
    }

    @ApiOperation(value = "根据id查询详情", notes = "必传参数：id")
    @ApiImplicitParam(name = "id", value = "参数列表", required = true)
    public HttpApi<${entity}Vo> findOne(@RequestParam("id") Long id) {
            return HttpApi.ok(${table.name}Service.findOne(id));
    }

    @ApiOperation(value = "分页查询", notes = "必传参数：TODO")
    @ApiImplicitParam(name = "param", value = "参数列表", required = true, paramType = "body", dataType = "${entity}Param")
    public HttpApi<Page<${entity}Vo>> page(@RequestBody ${entity}Param param) {
        return HttpApi.ok(${table.name}Service.page(param));
    }


}
